*potion.txt* functionality for the potion programming language


 ____       _   _             
|  _ \ ___ | |_(_) ___  _ __  
| |_) / _ \| __| |/ _ \| '_ \ 
|  __/ (_) | |_| | (_) | | | |
|_|   \___/ \__|_|\___/|_| |_|
                             

Functionality for the Potion Programming Language


====================================================================
CONTENTS                                            *PotionContents*

1. Usage  ................ | PotionUsage | 
2. Mappings .............. | PotionMappings |
3. License  .............. | PotionLicense |
4. Bugs .................. | PotionBugs | 
5. Contributing .......... | PotionContributing |
6. Changelog ............. | PotionChangelog |
7. Credits ............... | Potion Credits |

====================================================================
Section 1: Usage                                       *PotionUsage*

This plugin  provides syntax highlighting for Potion files 
(which end in .pn)

It also implements folding support, and commands such as `zM`, `zR` and
`za` work with .pn files. 

In addition, the plugin affords functionality for the section 
movement commands `[[`, `]]`, `[]` and `][` 

(For the Potion language, see http://perl11.org/potion/index.html)

====================================================================
Section 2: Mappings                                 *PotionMappings*

Potion defines two convenient mappings 

--------------------------------------------------------------------
2.1 Compile and Run                            *PotionCompileAndRun*

`PotionCompileAndRun()`
Bound to: <localleader>r

This function, as the name suggests, compiles and runs a Potion 
file from within vim. The potion-example folder contains an example
Potion program, `factorial.pn`.  This may be executed from within vim
using the above mappping (instead of, for example, 
`!potion /path/to/factorial.pn`) 

--------------------------------------------------------------------
2.1 Show Bytecode                               *PotionShowBytecode* 

`PotionShowBytecode()`
  Bound to: <localleader>b

This function shows the bytecode generated by the Potion compiler
in a separate vertical-split window.  

Check it out using the example (`factorial.pn`) provided in the 
potion-example folder

====================================================================
Section 3: License                                   *PotionLicense* 

Potion is MIT/X11 licensed.

====================================================================
Section 4: Bugs                                         *PotionBugs* 

If you find a bug please post it on the issue tracker:

  https://github.com/tomGdow/potion/issues

====================================================================
Section 5: Contributing                         *PotionContributing* 

To improve this plugin, fork it on GitHub and submit a pull request.

GitHub 
  https://github.com/tomGdow/potion

====================================================================
Section 6: Changelog                               *PotionChangelog* 

v1.0.0
  * Initial stable release (May 06 2018)

====================================================================
Section 6: Credits                                   *PotionCredits* 

Created by tomgdow 
  https://github.com/tomGdow, 
based on 'Learn Vimscript the Hard Way'
  http://learnvimscriptthehardway.stevelosh.com/
by Steve Losh 
  http://stevelosh.com/


